# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'


- task: DotNetCoreCLI@2
  displayName: Build Console App
  inputs:
    command: build
    projects: 'Cribbage.ConsoleApp/Cribbage.ConsoleApp.csproj'
    arguments: '--configuration Debug' 

- task: DotNetCoreCLI@2
  displayName: Build API Project
  inputs:
    command: build
    projects: 'Cribbage.API/Cribbage.API.csproj'
    arguments: '--configuration Debug'

- task: DotNetCoreCLI@2
  displayName: Test API
  inputs:
    command: test
    projects: 'Cribbage.API.Test/Cribbage.API.Test.csproj'
    arguments: '--configuration Debug'

- task: DotNetCoreCLI@2
  displayName: Test PL
  inputs:
    command: test
    projects: 'Cribbage.PL.Test/Cribbage.PL.Test.csproj'
    arguments: '--configuration Debug' 

- task: DotNetCoreCLI@2
  displayName: Test BL
  inputs:
    command: test
    projects: 'Cribbage.BL.Test/Cribbage.BL.Test.csproj'
    arguments: '--configuration $(BuildConfiguration) --collect "XPlat Code coverage" -- RunConfiguration.DisableAppDomain=true'
    
- script: 'dotnet tool install --global dotnet-reportgenerator-globaltool --version 5.1.19'  
  displayName: 'Install ReportGenerator tool'  
  
- script: 'reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"Cobertura"'  
  displayName: 'Create reports'  

- task: PublishCodeCoverageResults@1  
  displayName: 'Publish code coverage'  
  inputs:  
    codeCoverageTool: Cobertura  
    summaryFileLocation: '$(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml'  