// <auto-generated />
using System;
using Cribbage.PL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cribbage.PL.Migrations
{
    [DbContext(typeof(CribbageEntities))]
    [Migration("20240215153647_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cribbage.PL.Entities.tblGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Complete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("GameName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Winner")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblGame_Id");

                    b.ToTable("tblGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b6bb3222-f678-4f22-810b-5daa724184fb"),
                            Complete = true,
                            Date = new DateTime(2023, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameName = "Test1",
                            Winner = new Guid("3cd30b17-22a5-40c5-b988-e1c5baffd355")
                        },
                        new
                        {
                            Id = new Guid("f333a17a-8a0b-4a0c-aafa-533cd111be1f"),
                            Complete = true,
                            Date = new DateTime(2023, 11, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameName = "Test2",
                            Winner = new Guid("ae29061b-939d-4cad-8c69-2dde184dc1dc")
                        },
                        new
                        {
                            Id = new Guid("3e590a9b-eac9-43e6-9b65-82bed9972168"),
                            Complete = true,
                            Date = new DateTime(2023, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameName = "Test3",
                            Winner = new Guid("507df959-7628-4162-9547-409356b236d9")
                        },
                        new
                        {
                            Id = new Guid("8cbac0ec-d8fb-4282-b150-e60541328d92"),
                            Complete = true,
                            Date = new DateTime(2024, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameName = "Test4",
                            Winner = new Guid("baa7b930-1507-421b-91e6-3d81d9d413d8")
                        },
                        new
                        {
                            Id = new Guid("de015f28-6eac-4a06-beb8-ebe9435d8397"),
                            Complete = true,
                            Date = new DateTime(2024, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameName = "Test5",
                            Winner = new Guid("baa7b930-1507-421b-91e6-3d81d9d413d8")
                        });
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AvgPtsPerGame")
                        .HasColumnType("float");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GamesLost")
                        .HasColumnType("int");

                    b.Property<int>("GamesStarted")
                        .HasColumnType("int");

                    b.Property<int>("GamesWon")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WinStreak")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_tblUser_Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("tblUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("baa7b930-1507-421b-91e6-3d81d9d413d8"),
                            AvgPtsPerGame = 121.0,
                            DisplayName = "CardMaster",
                            Email = "cribbage@game.com",
                            FirstName = "Joe",
                            GamesLost = 0,
                            GamesStarted = 1,
                            GamesWon = 2,
                            LastName = "Smith",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 2
                        },
                        new
                        {
                            Id = new Guid("3cd30b17-22a5-40c5-b988-e1c5baffd355"),
                            AvgPtsPerGame = 103.0,
                            DisplayName = "CribbageBox",
                            Email = "fun@yahoo.com",
                            FirstName = "Peter",
                            GamesLost = 1,
                            GamesStarted = 2,
                            GamesWon = 1,
                            LastName = "Parker",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 1
                        },
                        new
                        {
                            Id = new Guid("507df959-7628-4162-9547-409356b236d9"),
                            AvgPtsPerGame = 82.75,
                            DisplayName = "GamesRCool",
                            Email = "cards@me.com",
                            FirstName = "Kelly",
                            GamesLost = 3,
                            GamesStarted = 4,
                            GamesWon = 1,
                            LastName = "Bot",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 1
                        },
                        new
                        {
                            Id = new Guid("ae29061b-939d-4cad-8c69-2dde184dc1dc"),
                            AvgPtsPerGame = 121.0,
                            DisplayName = "Testing",
                            Email = "tester@gmail.com",
                            FirstName = "Test",
                            GamesLost = 0,
                            GamesStarted = 1,
                            GamesWon = 1,
                            LastName = "Tester",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 1
                        },
                        new
                        {
                            Id = new Guid("b3af847f-e0fb-4f1e-be8e-7eea7e00f053"),
                            AvgPtsPerGame = 50.0,
                            DisplayName = "Computer",
                            Email = "computer@computer.com",
                            FirstName = "Computer",
                            GamesLost = 0,
                            GamesStarted = 1,
                            GamesWon = 0,
                            LastName = "Computer",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 0
                        });
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblUserGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PlayerScore")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_tblUserGame_Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerId");

                    b.ToTable("tblUserGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f431db2f-4bf7-4339-83e8-262bfcadf9cd"),
                            GameId = new Guid("b6bb3222-f678-4f22-810b-5daa724184fb"),
                            PlayerId = new Guid("3cd30b17-22a5-40c5-b988-e1c5baffd355"),
                            PlayerScore = 121
                        },
                        new
                        {
                            Id = new Guid("2ff44603-0efc-4a2f-915d-46b107bf5454"),
                            GameId = new Guid("b6bb3222-f678-4f22-810b-5daa724184fb"),
                            PlayerId = new Guid("507df959-7628-4162-9547-409356b236d9"),
                            PlayerScore = 70
                        },
                        new
                        {
                            Id = new Guid("345becdf-78aa-4fc5-aa09-09b2cf397de1"),
                            GameId = new Guid("f333a17a-8a0b-4a0c-aafa-533cd111be1f"),
                            PlayerId = new Guid("507df959-7628-4162-9547-409356b236d9"),
                            PlayerScore = 90
                        },
                        new
                        {
                            Id = new Guid("26f4bff3-7153-4b61-ab04-9fa319d55a83"),
                            GameId = new Guid("f333a17a-8a0b-4a0c-aafa-533cd111be1f"),
                            PlayerId = new Guid("ae29061b-939d-4cad-8c69-2dde184dc1dc"),
                            PlayerScore = 121
                        },
                        new
                        {
                            Id = new Guid("d5c64d98-194f-4ea3-b95b-74323cfea3ae"),
                            GameId = new Guid("3e590a9b-eac9-43e6-9b65-82bed9972168"),
                            PlayerId = new Guid("507df959-7628-4162-9547-409356b236d9"),
                            PlayerScore = 121
                        },
                        new
                        {
                            Id = new Guid("32582047-9686-4c96-a16c-7f70e2b3e290"),
                            GameId = new Guid("3e590a9b-eac9-43e6-9b65-82bed9972168"),
                            PlayerId = new Guid("3cd30b17-22a5-40c5-b988-e1c5baffd355"),
                            PlayerScore = 85
                        },
                        new
                        {
                            Id = new Guid("473b8e26-228c-4c92-a819-dfaa545685cb"),
                            GameId = new Guid("8cbac0ec-d8fb-4282-b150-e60541328d92"),
                            PlayerId = new Guid("baa7b930-1507-421b-91e6-3d81d9d413d8"),
                            PlayerScore = 121
                        },
                        new
                        {
                            Id = new Guid("ec89bcb1-cc5c-4309-847f-7e4484517afe"),
                            GameId = new Guid("8cbac0ec-d8fb-4282-b150-e60541328d92"),
                            PlayerId = new Guid("507df959-7628-4162-9547-409356b236d9"),
                            PlayerScore = 50
                        },
                        new
                        {
                            Id = new Guid("9a62c722-9f81-49ee-a3c2-6189dba0e06c"),
                            GameId = new Guid("de015f28-6eac-4a06-beb8-ebe9435d8397"),
                            PlayerId = new Guid("baa7b930-1507-421b-91e6-3d81d9d413d8"),
                            PlayerScore = 121
                        },
                        new
                        {
                            Id = new Guid("2c31a158-5cdc-4dd6-ad8d-ee864794bba3"),
                            GameId = new Guid("de015f28-6eac-4a06-beb8-ebe9435d8397"),
                            PlayerId = new Guid("b3af847f-e0fb-4f1e-be8e-7eea7e00f053"),
                            PlayerScore = 50
                        });
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblUserGame", b =>
                {
                    b.HasOne("Cribbage.PL.Entities.tblGame", "Game")
                        .WithMany("tblUserGames")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tblUserGame_GameId");

                    b.HasOne("Cribbage.PL.Entities.tblUser", "User")
                        .WithMany("tblUserGames")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tblUserGame_UserId");

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblGame", b =>
                {
                    b.Navigation("tblUserGames");
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblUser", b =>
                {
                    b.Navigation("tblUserGames");
                });
#pragma warning restore 612, 618
        }
    }
}
