// <auto-generated />
using System;
using Cribbage.PL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cribbage.PL.Migrations
{
    [DbContext(typeof(CribbageEntities))]
    [Migration("20240215155017_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cribbage.PL.Entities.tblGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Complete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("GameName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Winner")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblGame_Id");

                    b.ToTable("tblGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c4408f96-2976-4fe2-8492-c0c252ef2b3d"),
                            Complete = true,
                            Date = new DateTime(2023, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameName = "Test1",
                            Winner = new Guid("7533a83e-d329-4af1-8abe-35c0793d9e9b")
                        },
                        new
                        {
                            Id = new Guid("01bd0ed8-1392-4f47-9943-657977fdb42b"),
                            Complete = true,
                            Date = new DateTime(2023, 11, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameName = "Test2",
                            Winner = new Guid("e3ba195c-68e8-44ae-8c35-1175c3803ba6")
                        },
                        new
                        {
                            Id = new Guid("20112213-9177-4a42-9543-15a22b66ba26"),
                            Complete = true,
                            Date = new DateTime(2023, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameName = "Test3",
                            Winner = new Guid("a988fc08-9f27-46d0-a4fa-89769251fde3")
                        },
                        new
                        {
                            Id = new Guid("c320ea7d-5d2c-4038-a053-81a689f404c6"),
                            Complete = true,
                            Date = new DateTime(2024, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameName = "Test4",
                            Winner = new Guid("50bbeb2b-f32c-4b01-806f-b55ed37991c6")
                        },
                        new
                        {
                            Id = new Guid("bf691a8d-b655-4657-8c01-b15261cd3292"),
                            Complete = true,
                            Date = new DateTime(2024, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameName = "Test5",
                            Winner = new Guid("50bbeb2b-f32c-4b01-806f-b55ed37991c6")
                        });
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AvgPtsPerGame")
                        .HasColumnType("float");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GamesLost")
                        .HasColumnType("int");

                    b.Property<int>("GamesStarted")
                        .HasColumnType("int");

                    b.Property<int>("GamesWon")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WinStreak")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_tblUser_Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("tblUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("50bbeb2b-f32c-4b01-806f-b55ed37991c6"),
                            AvgPtsPerGame = 121.0,
                            DisplayName = "CardMaster",
                            Email = "cribbage@game.com",
                            FirstName = "Joe",
                            GamesLost = 0,
                            GamesStarted = 1,
                            GamesWon = 2,
                            LastName = "Smith",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 2
                        },
                        new
                        {
                            Id = new Guid("7533a83e-d329-4af1-8abe-35c0793d9e9b"),
                            AvgPtsPerGame = 103.0,
                            DisplayName = "CribbageBox",
                            Email = "fun@yahoo.com",
                            FirstName = "Peter",
                            GamesLost = 1,
                            GamesStarted = 2,
                            GamesWon = 1,
                            LastName = "Parker",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 1
                        },
                        new
                        {
                            Id = new Guid("a988fc08-9f27-46d0-a4fa-89769251fde3"),
                            AvgPtsPerGame = 82.75,
                            DisplayName = "GamesRCool",
                            Email = "cards@me.com",
                            FirstName = "Kelly",
                            GamesLost = 3,
                            GamesStarted = 4,
                            GamesWon = 1,
                            LastName = "Bot",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 1
                        },
                        new
                        {
                            Id = new Guid("e3ba195c-68e8-44ae-8c35-1175c3803ba6"),
                            AvgPtsPerGame = 121.0,
                            DisplayName = "Testing",
                            Email = "tester@gmail.com",
                            FirstName = "Test",
                            GamesLost = 0,
                            GamesStarted = 1,
                            GamesWon = 1,
                            LastName = "Tester",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 1
                        },
                        new
                        {
                            Id = new Guid("150dc3dc-ae81-488c-86fc-941190a334cc"),
                            AvgPtsPerGame = 50.0,
                            DisplayName = "Computer",
                            Email = "computer@computer.com",
                            FirstName = "Computer",
                            GamesLost = 0,
                            GamesStarted = 1,
                            GamesWon = 0,
                            LastName = "Computer",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 0
                        });
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblUserGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PlayerScore")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_tblUserGame_Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerId");

                    b.ToTable("tblUserGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("0dc0e147-9ca8-47af-8cfe-19a59e9b05b1"),
                            GameId = new Guid("c4408f96-2976-4fe2-8492-c0c252ef2b3d"),
                            PlayerId = new Guid("7533a83e-d329-4af1-8abe-35c0793d9e9b"),
                            PlayerScore = 121
                        },
                        new
                        {
                            Id = new Guid("83d9dab7-961e-4db7-9b3b-424b0804a3dd"),
                            GameId = new Guid("c4408f96-2976-4fe2-8492-c0c252ef2b3d"),
                            PlayerId = new Guid("a988fc08-9f27-46d0-a4fa-89769251fde3"),
                            PlayerScore = 70
                        },
                        new
                        {
                            Id = new Guid("0280b01f-a14d-4841-abdb-312e42f0999b"),
                            GameId = new Guid("01bd0ed8-1392-4f47-9943-657977fdb42b"),
                            PlayerId = new Guid("a988fc08-9f27-46d0-a4fa-89769251fde3"),
                            PlayerScore = 90
                        },
                        new
                        {
                            Id = new Guid("915d1b6f-8c8f-4e9d-874d-508c7a23dfb4"),
                            GameId = new Guid("01bd0ed8-1392-4f47-9943-657977fdb42b"),
                            PlayerId = new Guid("e3ba195c-68e8-44ae-8c35-1175c3803ba6"),
                            PlayerScore = 121
                        },
                        new
                        {
                            Id = new Guid("a327a126-4fb0-4326-a70c-e527082cf2c3"),
                            GameId = new Guid("20112213-9177-4a42-9543-15a22b66ba26"),
                            PlayerId = new Guid("a988fc08-9f27-46d0-a4fa-89769251fde3"),
                            PlayerScore = 121
                        },
                        new
                        {
                            Id = new Guid("554f727e-0a21-4236-9092-014dc1bd5ebb"),
                            GameId = new Guid("20112213-9177-4a42-9543-15a22b66ba26"),
                            PlayerId = new Guid("7533a83e-d329-4af1-8abe-35c0793d9e9b"),
                            PlayerScore = 85
                        },
                        new
                        {
                            Id = new Guid("dbe02981-3194-4643-a0c8-2bbff58f995d"),
                            GameId = new Guid("c320ea7d-5d2c-4038-a053-81a689f404c6"),
                            PlayerId = new Guid("50bbeb2b-f32c-4b01-806f-b55ed37991c6"),
                            PlayerScore = 121
                        },
                        new
                        {
                            Id = new Guid("3bdb25f8-7b06-4ac0-953c-4d7f6879ce76"),
                            GameId = new Guid("c320ea7d-5d2c-4038-a053-81a689f404c6"),
                            PlayerId = new Guid("a988fc08-9f27-46d0-a4fa-89769251fde3"),
                            PlayerScore = 50
                        },
                        new
                        {
                            Id = new Guid("b20d5802-93c1-4560-946e-85678b076f01"),
                            GameId = new Guid("bf691a8d-b655-4657-8c01-b15261cd3292"),
                            PlayerId = new Guid("50bbeb2b-f32c-4b01-806f-b55ed37991c6"),
                            PlayerScore = 121
                        },
                        new
                        {
                            Id = new Guid("bd65b434-959e-4b5a-bfbd-61bb14011a68"),
                            GameId = new Guid("bf691a8d-b655-4657-8c01-b15261cd3292"),
                            PlayerId = new Guid("150dc3dc-ae81-488c-86fc-941190a334cc"),
                            PlayerScore = 50
                        });
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblUserGame", b =>
                {
                    b.HasOne("Cribbage.PL.Entities.tblGame", "Game")
                        .WithMany("tblUserGames")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tblUserGame_GameId");

                    b.HasOne("Cribbage.PL.Entities.tblUser", "User")
                        .WithMany("tblUserGames")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tblUserGame_UserId");

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblGame", b =>
                {
                    b.Navigation("tblUserGames");
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblUser", b =>
                {
                    b.Navigation("tblUserGames");
                });
#pragma warning restore 612, 618
        }
    }
}
