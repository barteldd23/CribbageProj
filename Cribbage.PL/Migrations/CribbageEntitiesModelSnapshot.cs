// <auto-generated />
using System;
using Cribbage.PL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cribbage.PL.Migrations
{
    [DbContext(typeof(CribbageEntities))]
    partial class CribbageEntitiesModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cribbage.PL.Entities.tblGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Complete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("GameName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Winner")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblGame_Id");

                    b.ToTable("tblGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f900b97b-6bfa-48ba-9ba2-0a11a3baf555"),
                            Complete = true,
                            Date = new DateTime(2023, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameName = "Test1",
                            Winner = new Guid("3285898c-cb80-4292-8ebd-e7a872d7ad78")
                        },
                        new
                        {
                            Id = new Guid("8592b201-79f5-4c8e-9b6c-c4a8fe577e76"),
                            Complete = true,
                            Date = new DateTime(2023, 11, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameName = "Test2",
                            Winner = new Guid("8622d459-75d3-425b-8d15-e7834ca26be9")
                        },
                        new
                        {
                            Id = new Guid("4e639a75-9603-491f-8fe2-63922c146c30"),
                            Complete = true,
                            Date = new DateTime(2023, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameName = "Test3",
                            Winner = new Guid("d5c0c33f-8456-4113-9044-54b2cb904f37")
                        },
                        new
                        {
                            Id = new Guid("3ce83c42-2d6c-43d3-93d3-c29e0f455067"),
                            Complete = true,
                            Date = new DateTime(2024, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameName = "Test4",
                            Winner = new Guid("361b8dab-0966-4f5b-af46-56dd34de727b")
                        },
                        new
                        {
                            Id = new Guid("90a91d1c-b521-4e7c-a0c5-ed1f60204541"),
                            Complete = true,
                            Date = new DateTime(2024, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameName = "Test5",
                            Winner = new Guid("361b8dab-0966-4f5b-af46-56dd34de727b")
                        });
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AvgHandScore")
                        .HasColumnType("float");

                    b.Property<double>("AvgPtsPerGame")
                        .HasColumnType("float");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GamesLost")
                        .HasColumnType("int");

                    b.Property<int>("GamesStarted")
                        .HasColumnType("int");

                    b.Property<int>("GamesWon")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WinStreak")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_tblUser_Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("tblUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("361b8dab-0966-4f5b-af46-56dd34de727b"),
                            AvgHandScore = 15.0,
                            AvgPtsPerGame = 121.0,
                            DisplayName = "CardMaster",
                            Email = "cribbage@game.com",
                            FirstName = "Joe",
                            GamesLost = 0,
                            GamesStarted = 1,
                            GamesWon = 2,
                            LastName = "Smith",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 2
                        },
                        new
                        {
                            Id = new Guid("3285898c-cb80-4292-8ebd-e7a872d7ad78"),
                            AvgHandScore = 10.0,
                            AvgPtsPerGame = 103.0,
                            DisplayName = "CribbageBox",
                            Email = "fun@yahoo.com",
                            FirstName = "Peter",
                            GamesLost = 1,
                            GamesStarted = 2,
                            GamesWon = 1,
                            LastName = "Parker",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 1
                        },
                        new
                        {
                            Id = new Guid("d5c0c33f-8456-4113-9044-54b2cb904f37"),
                            AvgHandScore = 8.0,
                            AvgPtsPerGame = 82.75,
                            DisplayName = "GamesRCool",
                            Email = "cards@me.com",
                            FirstName = "Kelly",
                            GamesLost = 3,
                            GamesStarted = 4,
                            GamesWon = 1,
                            LastName = "Bot",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 1
                        },
                        new
                        {
                            Id = new Guid("8622d459-75d3-425b-8d15-e7834ca26be9"),
                            AvgHandScore = 20.0,
                            AvgPtsPerGame = 121.0,
                            DisplayName = "Testing",
                            Email = "tester@gmail.com",
                            FirstName = "Test",
                            GamesLost = 0,
                            GamesStarted = 1,
                            GamesWon = 1,
                            LastName = "Tester",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 1
                        },
                        new
                        {
                            Id = new Guid("7be3bf63-9002-4311-8406-0a9ffbb86b63"),
                            AvgHandScore = 5.0,
                            AvgPtsPerGame = 50.0,
                            DisplayName = "Computer",
                            Email = "computer@computer.com",
                            FirstName = "Computer",
                            GamesLost = 0,
                            GamesStarted = 1,
                            GamesWon = 0,
                            LastName = "Computer",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 0
                        });
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblUserGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PlayerScore")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_tblUserGame_Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerId");

                    b.ToTable("tblUserGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("71e2ae3e-70d7-49a3-a05d-d06b50f1b92b"),
                            GameId = new Guid("f900b97b-6bfa-48ba-9ba2-0a11a3baf555"),
                            PlayerId = new Guid("3285898c-cb80-4292-8ebd-e7a872d7ad78"),
                            PlayerScore = 121
                        },
                        new
                        {
                            Id = new Guid("482f351f-6e01-4506-babc-0f47e380deac"),
                            GameId = new Guid("f900b97b-6bfa-48ba-9ba2-0a11a3baf555"),
                            PlayerId = new Guid("d5c0c33f-8456-4113-9044-54b2cb904f37"),
                            PlayerScore = 70
                        },
                        new
                        {
                            Id = new Guid("9eab3f87-13fd-4df9-9128-f16007b99f19"),
                            GameId = new Guid("8592b201-79f5-4c8e-9b6c-c4a8fe577e76"),
                            PlayerId = new Guid("d5c0c33f-8456-4113-9044-54b2cb904f37"),
                            PlayerScore = 90
                        },
                        new
                        {
                            Id = new Guid("cdc3a664-9222-481d-b927-f03f129979a7"),
                            GameId = new Guid("8592b201-79f5-4c8e-9b6c-c4a8fe577e76"),
                            PlayerId = new Guid("8622d459-75d3-425b-8d15-e7834ca26be9"),
                            PlayerScore = 121
                        },
                        new
                        {
                            Id = new Guid("68555fa8-5342-4d0e-a40d-dacb7c2b28d0"),
                            GameId = new Guid("4e639a75-9603-491f-8fe2-63922c146c30"),
                            PlayerId = new Guid("d5c0c33f-8456-4113-9044-54b2cb904f37"),
                            PlayerScore = 121
                        },
                        new
                        {
                            Id = new Guid("b8c5287d-bdca-4543-8cb4-bb529f3eef85"),
                            GameId = new Guid("4e639a75-9603-491f-8fe2-63922c146c30"),
                            PlayerId = new Guid("3285898c-cb80-4292-8ebd-e7a872d7ad78"),
                            PlayerScore = 85
                        },
                        new
                        {
                            Id = new Guid("fc872e76-5ff0-43c1-83db-a71fb9230bbc"),
                            GameId = new Guid("3ce83c42-2d6c-43d3-93d3-c29e0f455067"),
                            PlayerId = new Guid("361b8dab-0966-4f5b-af46-56dd34de727b"),
                            PlayerScore = 121
                        },
                        new
                        {
                            Id = new Guid("056b3725-1c04-41e4-b29b-fd659dd55586"),
                            GameId = new Guid("3ce83c42-2d6c-43d3-93d3-c29e0f455067"),
                            PlayerId = new Guid("d5c0c33f-8456-4113-9044-54b2cb904f37"),
                            PlayerScore = 50
                        },
                        new
                        {
                            Id = new Guid("5ad6de29-2ed3-472f-95f1-f468fa513f29"),
                            GameId = new Guid("90a91d1c-b521-4e7c-a0c5-ed1f60204541"),
                            PlayerId = new Guid("361b8dab-0966-4f5b-af46-56dd34de727b"),
                            PlayerScore = 121
                        },
                        new
                        {
                            Id = new Guid("34f5dead-980f-4fd1-b541-120ce80da46c"),
                            GameId = new Guid("90a91d1c-b521-4e7c-a0c5-ed1f60204541"),
                            PlayerId = new Guid("7be3bf63-9002-4311-8406-0a9ffbb86b63"),
                            PlayerScore = 50
                        });
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblUserGame", b =>
                {
                    b.HasOne("Cribbage.PL.Entities.tblGame", "Game")
                        .WithMany("tblUserGames")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tblUserGame_GameId");

                    b.HasOne("Cribbage.PL.Entities.tblUser", "User")
                        .WithMany("tblUserGames")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tblUserGame_UserId");

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblGame", b =>
                {
                    b.Navigation("tblUserGames");
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblUser", b =>
                {
                    b.Navigation("tblUserGames");
                });
#pragma warning restore 612, 618
        }
    }
}
