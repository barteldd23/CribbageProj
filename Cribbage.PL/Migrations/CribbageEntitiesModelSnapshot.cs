// <auto-generated />
using System;
using Cribbage.PL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cribbage.PL.Migrations
{
    [DbContext(typeof(CribbageEntities))]
    partial class CribbageEntitiesModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cribbage.PL.Entities.tblGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<Guid>("Player_1_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Player_1_Score")
                        .HasColumnType("int");

                    b.Property<Guid>("Player_2_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Player_2_Score")
                        .HasColumnType("int");

                    b.Property<Guid>("Winner")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblGame_Id");

                    b.ToTable("tblGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("59f97341-0c60-4bb8-92b2-cedf364e4a77"),
                            Date = new DateTime(2023, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Player_1_Id = new Guid("501efe9c-fb72-4037-bb0f-feca082ba20b"),
                            Player_1_Score = 121,
                            Player_2_Id = new Guid("834fc2c5-1638-4593-a5e9-dea5d5d2d143"),
                            Player_2_Score = 70,
                            Winner = new Guid("501efe9c-fb72-4037-bb0f-feca082ba20b")
                        },
                        new
                        {
                            Id = new Guid("d8848963-8adb-4f7d-b531-61fadfac947e"),
                            Date = new DateTime(2023, 11, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Player_1_Id = new Guid("834fc2c5-1638-4593-a5e9-dea5d5d2d143"),
                            Player_1_Score = 90,
                            Player_2_Id = new Guid("29436414-985b-4181-9cf8-787bd3204d87"),
                            Player_2_Score = 121,
                            Winner = new Guid("29436414-985b-4181-9cf8-787bd3204d87")
                        },
                        new
                        {
                            Id = new Guid("1079eb15-54df-47fd-b40f-c71cbbcbfc3b"),
                            Date = new DateTime(2023, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Player_1_Id = new Guid("834fc2c5-1638-4593-a5e9-dea5d5d2d143"),
                            Player_1_Score = 121,
                            Player_2_Id = new Guid("501efe9c-fb72-4037-bb0f-feca082ba20b"),
                            Player_2_Score = 85,
                            Winner = new Guid("834fc2c5-1638-4593-a5e9-dea5d5d2d143")
                        },
                        new
                        {
                            Id = new Guid("b9f9a5a7-44bd-44ec-8ed6-65ce70242e1c"),
                            Date = new DateTime(2024, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Player_1_Id = new Guid("9a6a1873-0111-472e-aa05-12577d2cb9ae"),
                            Player_1_Score = 121,
                            Player_2_Id = new Guid("834fc2c5-1638-4593-a5e9-dea5d5d2d143"),
                            Player_2_Score = 50,
                            Winner = new Guid("9a6a1873-0111-472e-aa05-12577d2cb9ae")
                        },
                        new
                        {
                            Id = new Guid("696ed53e-5341-4474-a720-d0744adf43f7"),
                            Date = new DateTime(2024, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Player_1_Id = new Guid("9a6a1873-0111-472e-aa05-12577d2cb9ae"),
                            Player_1_Score = 121,
                            Player_2_Id = new Guid("b0f1e70f-76e4-4206-ad5e-786c291ca264"),
                            Player_2_Score = 50,
                            Winner = new Guid("9a6a1873-0111-472e-aa05-12577d2cb9ae")
                        });
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AvgPtsPerGame")
                        .HasColumnType("float");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GamesStarted")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Losses")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WinStreak")
                        .HasColumnType("int");

                    b.Property<int>("Wins")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_tblUser_Id");

                    b.ToTable("tblUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9a6a1873-0111-472e-aa05-12577d2cb9ae"),
                            AvgPtsPerGame = 121.0,
                            DisplayName = "CardMaster",
                            Email = "cribbage@game.com",
                            FirstName = "Joe",
                            GamesStarted = 1,
                            LastName = "Smith",
                            Losses = 0,
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 2,
                            Wins = 2
                        },
                        new
                        {
                            Id = new Guid("501efe9c-fb72-4037-bb0f-feca082ba20b"),
                            AvgPtsPerGame = 103.0,
                            DisplayName = "CribbageBox",
                            Email = "fun@yahoo.com",
                            FirstName = "Peter",
                            GamesStarted = 2,
                            LastName = "Parker",
                            Losses = 1,
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 1,
                            Wins = 1
                        },
                        new
                        {
                            Id = new Guid("834fc2c5-1638-4593-a5e9-dea5d5d2d143"),
                            AvgPtsPerGame = 82.75,
                            DisplayName = "GamesRCool",
                            Email = "cards@me.com",
                            FirstName = "Kelly",
                            GamesStarted = 4,
                            LastName = "Bot",
                            Losses = 3,
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 1,
                            Wins = 1
                        },
                        new
                        {
                            Id = new Guid("29436414-985b-4181-9cf8-787bd3204d87"),
                            AvgPtsPerGame = 121.0,
                            DisplayName = "Testing",
                            Email = "tester@gmail.com",
                            FirstName = "Test",
                            GamesStarted = 1,
                            LastName = "Tester",
                            Losses = 0,
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 1,
                            Wins = 1
                        },
                        new
                        {
                            Id = new Guid("b0f1e70f-76e4-4206-ad5e-786c291ca264"),
                            AvgPtsPerGame = 50.0,
                            DisplayName = "Computer",
                            Email = "computer@computer.com",
                            FirstName = "Computer",
                            GamesStarted = 1,
                            LastName = "Computer",
                            Losses = 0,
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 0,
                            Wins = 0
                        });
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblUserGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblUserGame_Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("tblUserGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = -99,
                            GameId = new Guid("59f97341-0c60-4bb8-92b2-cedf364e4a77"),
                            UserId = new Guid("501efe9c-fb72-4037-bb0f-feca082ba20b")
                        },
                        new
                        {
                            Id = -98,
                            GameId = new Guid("d8848963-8adb-4f7d-b531-61fadfac947e"),
                            UserId = new Guid("29436414-985b-4181-9cf8-787bd3204d87")
                        },
                        new
                        {
                            Id = -97,
                            GameId = new Guid("1079eb15-54df-47fd-b40f-c71cbbcbfc3b"),
                            UserId = new Guid("834fc2c5-1638-4593-a5e9-dea5d5d2d143")
                        },
                        new
                        {
                            Id = -96,
                            GameId = new Guid("b9f9a5a7-44bd-44ec-8ed6-65ce70242e1c"),
                            UserId = new Guid("9a6a1873-0111-472e-aa05-12577d2cb9ae")
                        },
                        new
                        {
                            Id = -95,
                            GameId = new Guid("696ed53e-5341-4474-a720-d0744adf43f7"),
                            UserId = new Guid("9a6a1873-0111-472e-aa05-12577d2cb9ae")
                        });
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblUserGame", b =>
                {
                    b.HasOne("Cribbage.PL.Entities.tblGame", "Game")
                        .WithMany("tblUserGames")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tblUserGame_GameId");

                    b.HasOne("Cribbage.PL.Entities.tblUser", "User")
                        .WithMany("tblUserGames")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tblUserGame_UserId");

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblGame", b =>
                {
                    b.Navigation("tblUserGames");
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblUser", b =>
                {
                    b.Navigation("tblUserGames");
                });
#pragma warning restore 612, 618
        }
    }
}
