// <auto-generated />
using System;
using Cribbage.PL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cribbage.PL.Migrations
{
    [DbContext(typeof(CribbageEntities))]
    partial class CribbageEntitiesModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cribbage.PL.Entities.tblGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Complete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<Guid>("Winner")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblGame_Id");

                    b.ToTable("tblGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("86dae85b-4d1c-4241-94d8-c259b9cabb7a"),
                            Complete = true,
                            Date = new DateTime(2023, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Winner = new Guid("482b11ef-e263-42b5-9e0b-4b97d59ee875")
                        },
                        new
                        {
                            Id = new Guid("1eeb4e48-0052-4646-884b-5e382bd1b115"),
                            Complete = true,
                            Date = new DateTime(2023, 11, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Winner = new Guid("2b86b984-5fe1-48ba-ad43-475cc807b4f2")
                        },
                        new
                        {
                            Id = new Guid("c639847c-1001-4017-8e26-50e7ca80a902"),
                            Complete = true,
                            Date = new DateTime(2023, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Winner = new Guid("5310802f-07a5-41d3-a247-00291bd28ef2")
                        },
                        new
                        {
                            Id = new Guid("ede17980-2c16-4907-afc8-2f0c332743eb"),
                            Complete = true,
                            Date = new DateTime(2024, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Winner = new Guid("342bd2a2-4817-421e-999e-06996e0cd9a4")
                        },
                        new
                        {
                            Id = new Guid("af5758c4-96b5-4df4-a2cc-28fef6ff0acb"),
                            Complete = true,
                            Date = new DateTime(2024, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Winner = new Guid("342bd2a2-4817-421e-999e-06996e0cd9a4")
                        });
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AvgPtsPerGame")
                        .HasColumnType("float");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GamesStarted")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Losses")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WinStreak")
                        .HasColumnType("int");

                    b.Property<int>("Wins")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_tblUser_Id");

                    b.ToTable("tblUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("342bd2a2-4817-421e-999e-06996e0cd9a4"),
                            AvgPtsPerGame = 121.0,
                            DisplayName = "CardMaster",
                            Email = "cribbage@game.com",
                            FirstName = "Joe",
                            GamesStarted = 1,
                            LastName = "Smith",
                            Losses = 0,
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 2,
                            Wins = 2
                        },
                        new
                        {
                            Id = new Guid("482b11ef-e263-42b5-9e0b-4b97d59ee875"),
                            AvgPtsPerGame = 103.0,
                            DisplayName = "CribbageBox",
                            Email = "fun@yahoo.com",
                            FirstName = "Peter",
                            GamesStarted = 2,
                            LastName = "Parker",
                            Losses = 1,
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 1,
                            Wins = 1
                        },
                        new
                        {
                            Id = new Guid("5310802f-07a5-41d3-a247-00291bd28ef2"),
                            AvgPtsPerGame = 82.75,
                            DisplayName = "GamesRCool",
                            Email = "cards@me.com",
                            FirstName = "Kelly",
                            GamesStarted = 4,
                            LastName = "Bot",
                            Losses = 3,
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 1,
                            Wins = 1
                        },
                        new
                        {
                            Id = new Guid("2b86b984-5fe1-48ba-ad43-475cc807b4f2"),
                            AvgPtsPerGame = 121.0,
                            DisplayName = "Testing",
                            Email = "tester@gmail.com",
                            FirstName = "Test",
                            GamesStarted = 1,
                            LastName = "Tester",
                            Losses = 0,
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 1,
                            Wins = 1
                        },
                        new
                        {
                            Id = new Guid("1f441910-1161-445a-a2ec-a77fdde7e5ca"),
                            AvgPtsPerGame = 50.0,
                            DisplayName = "Computer",
                            Email = "computer@computer.com",
                            FirstName = "Computer",
                            GamesStarted = 1,
                            LastName = "Computer",
                            Losses = 0,
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 0,
                            Wins = 0
                        });
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblUserGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PlayerScore")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_tblUserGame_Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerId");

                    b.ToTable("tblUserGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6a821b15-685b-493a-8687-479008655bdd"),
                            GameId = new Guid("86dae85b-4d1c-4241-94d8-c259b9cabb7a"),
                            PlayerId = new Guid("482b11ef-e263-42b5-9e0b-4b97d59ee875"),
                            PlayerScore = 121
                        },
                        new
                        {
                            Id = new Guid("6ce5667e-3932-47b6-b641-dd3730c0915f"),
                            GameId = new Guid("86dae85b-4d1c-4241-94d8-c259b9cabb7a"),
                            PlayerId = new Guid("5310802f-07a5-41d3-a247-00291bd28ef2"),
                            PlayerScore = 70
                        },
                        new
                        {
                            Id = new Guid("ade9eb5c-b878-43b8-a78a-458a7a3a9758"),
                            GameId = new Guid("1eeb4e48-0052-4646-884b-5e382bd1b115"),
                            PlayerId = new Guid("5310802f-07a5-41d3-a247-00291bd28ef2"),
                            PlayerScore = 90
                        },
                        new
                        {
                            Id = new Guid("8905bb7a-c0b1-4f18-8dad-c8caf2651a63"),
                            GameId = new Guid("1eeb4e48-0052-4646-884b-5e382bd1b115"),
                            PlayerId = new Guid("2b86b984-5fe1-48ba-ad43-475cc807b4f2"),
                            PlayerScore = 121
                        },
                        new
                        {
                            Id = new Guid("23008496-9d0a-4f8c-af05-e4b3b4ec6ed8"),
                            GameId = new Guid("c639847c-1001-4017-8e26-50e7ca80a902"),
                            PlayerId = new Guid("5310802f-07a5-41d3-a247-00291bd28ef2"),
                            PlayerScore = 121
                        },
                        new
                        {
                            Id = new Guid("aee3a793-bd31-4a55-b4aa-f5ab1f282cf4"),
                            GameId = new Guid("c639847c-1001-4017-8e26-50e7ca80a902"),
                            PlayerId = new Guid("482b11ef-e263-42b5-9e0b-4b97d59ee875"),
                            PlayerScore = 85
                        },
                        new
                        {
                            Id = new Guid("d5c1b02a-d648-4cac-8997-24e69beebd78"),
                            GameId = new Guid("ede17980-2c16-4907-afc8-2f0c332743eb"),
                            PlayerId = new Guid("342bd2a2-4817-421e-999e-06996e0cd9a4"),
                            PlayerScore = 121
                        },
                        new
                        {
                            Id = new Guid("bf706849-c887-4b4a-93bc-c5dad6b2a5ab"),
                            GameId = new Guid("ede17980-2c16-4907-afc8-2f0c332743eb"),
                            PlayerId = new Guid("5310802f-07a5-41d3-a247-00291bd28ef2"),
                            PlayerScore = 50
                        },
                        new
                        {
                            Id = new Guid("4e5f95da-60c5-4e7d-8cf4-8b7e2843314d"),
                            GameId = new Guid("af5758c4-96b5-4df4-a2cc-28fef6ff0acb"),
                            PlayerId = new Guid("342bd2a2-4817-421e-999e-06996e0cd9a4"),
                            PlayerScore = 121
                        },
                        new
                        {
                            Id = new Guid("4448fb17-da3c-4c23-a502-aad1fb47e69e"),
                            GameId = new Guid("af5758c4-96b5-4df4-a2cc-28fef6ff0acb"),
                            PlayerId = new Guid("1f441910-1161-445a-a2ec-a77fdde7e5ca"),
                            PlayerScore = 50
                        });
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblUserGame", b =>
                {
                    b.HasOne("Cribbage.PL.Entities.tblGame", "Game")
                        .WithMany("tblUserGames")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tblUserGame_GameId");

                    b.HasOne("Cribbage.PL.Entities.tblUser", "User")
                        .WithMany("tblUserGames")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tblUserGame_UserId");

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblGame", b =>
                {
                    b.Navigation("tblUserGames");
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblUser", b =>
                {
                    b.Navigation("tblUserGames");
                });
#pragma warning restore 612, 618
        }
    }
}
