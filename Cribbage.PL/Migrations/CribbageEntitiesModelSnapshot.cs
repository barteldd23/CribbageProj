// <auto-generated />
using System;
using Cribbage.PL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cribbage.PL.Migrations
{
    [DbContext(typeof(CribbageEntities))]
    partial class CribbageEntitiesModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cribbage.PL.Entities.tblGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Complete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("GameName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Winner")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblGame_Id");

                    b.ToTable("tblGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8122b07d-74f4-47f2-b10b-3feb6f0a9e7a"),
                            Complete = true,
                            Date = new DateTime(2023, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameName = "Test1",
                            Winner = new Guid("bb6a24a9-2aab-43e3-bc3d-3c0235a45ae6")
                        },
                        new
                        {
                            Id = new Guid("f3753036-2b1c-47e0-9fa2-df8d043ef5e4"),
                            Complete = true,
                            Date = new DateTime(2023, 11, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameName = "Test2",
                            Winner = new Guid("975a40e0-9331-4f27-9154-d3f09f28e403")
                        },
                        new
                        {
                            Id = new Guid("776a75b7-1a9a-474d-bd41-8626ea2cc461"),
                            Complete = true,
                            Date = new DateTime(2023, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameName = "Test3",
                            Winner = new Guid("08fc2f13-754c-46ae-adea-9188877593d2")
                        },
                        new
                        {
                            Id = new Guid("c332ff9d-cd0f-4c33-8041-f27d8f80fd12"),
                            Complete = true,
                            Date = new DateTime(2024, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameName = "Test4",
                            Winner = new Guid("bbec4de0-524c-440e-8598-3cda26b298bc")
                        },
                        new
                        {
                            Id = new Guid("33db8313-0441-4e40-9096-dce7d7c097a2"),
                            Complete = true,
                            Date = new DateTime(2024, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameName = "Test5",
                            Winner = new Guid("bbec4de0-524c-440e-8598-3cda26b298bc")
                        });
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AvgHandScore")
                        .HasColumnType("float");

                    b.Property<double>("AvgPtsPerGame")
                        .HasColumnType("float");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GamesLost")
                        .HasColumnType("int");

                    b.Property<int>("GamesStarted")
                        .HasColumnType("int");

                    b.Property<int>("GamesWon")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WinStreak")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_tblUser_Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("tblUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bbec4de0-524c-440e-8598-3cda26b298bc"),
                            AvgHandScore = 15.0,
                            AvgPtsPerGame = 121.0,
                            DisplayName = "CardMaster",
                            Email = "cribbage@game.com",
                            FirstName = "Joe",
                            GamesLost = 0,
                            GamesStarted = 1,
                            GamesWon = 2,
                            LastName = "Smith",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 2
                        },
                        new
                        {
                            Id = new Guid("bb6a24a9-2aab-43e3-bc3d-3c0235a45ae6"),
                            AvgHandScore = 10.0,
                            AvgPtsPerGame = 103.0,
                            DisplayName = "CribbageBox",
                            Email = "fun@yahoo.com",
                            FirstName = "Peter",
                            GamesLost = 1,
                            GamesStarted = 2,
                            GamesWon = 1,
                            LastName = "Parker",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 1
                        },
                        new
                        {
                            Id = new Guid("08fc2f13-754c-46ae-adea-9188877593d2"),
                            AvgHandScore = 8.0,
                            AvgPtsPerGame = 82.75,
                            DisplayName = "GamesRCool",
                            Email = "cards@me.com",
                            FirstName = "Kelly",
                            GamesLost = 3,
                            GamesStarted = 4,
                            GamesWon = 1,
                            LastName = "Bot",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 1
                        },
                        new
                        {
                            Id = new Guid("975a40e0-9331-4f27-9154-d3f09f28e403"),
                            AvgHandScore = 20.0,
                            AvgPtsPerGame = 121.0,
                            DisplayName = "Testing",
                            Email = "tester@gmail.com",
                            FirstName = "Test",
                            GamesLost = 0,
                            GamesStarted = 1,
                            GamesWon = 1,
                            LastName = "Tester",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 1
                        },
                        new
                        {
                            Id = new Guid("05258f2e-a384-49a9-920a-14ff7db49cec"),
                            AvgHandScore = 5.0,
                            AvgPtsPerGame = 50.0,
                            DisplayName = "Computer",
                            Email = "computer@computer.com",
                            FirstName = "Computer",
                            GamesLost = 0,
                            GamesStarted = 1,
                            GamesWon = 0,
                            LastName = "Computer",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            WinStreak = 0
                        });
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblUserGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PlayerScore")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_tblUserGame_Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerId");

                    b.ToTable("tblUserGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("147f71fa-6cef-4673-b975-9e223ccf472b"),
                            GameId = new Guid("8122b07d-74f4-47f2-b10b-3feb6f0a9e7a"),
                            PlayerId = new Guid("bb6a24a9-2aab-43e3-bc3d-3c0235a45ae6"),
                            PlayerScore = 121
                        },
                        new
                        {
                            Id = new Guid("3fec4814-36b9-46ff-9fc6-8bdfcc7291ed"),
                            GameId = new Guid("8122b07d-74f4-47f2-b10b-3feb6f0a9e7a"),
                            PlayerId = new Guid("08fc2f13-754c-46ae-adea-9188877593d2"),
                            PlayerScore = 70
                        },
                        new
                        {
                            Id = new Guid("e08b33dc-8b5e-452e-9e97-2a72b7658e87"),
                            GameId = new Guid("f3753036-2b1c-47e0-9fa2-df8d043ef5e4"),
                            PlayerId = new Guid("08fc2f13-754c-46ae-adea-9188877593d2"),
                            PlayerScore = 90
                        },
                        new
                        {
                            Id = new Guid("f2e31867-214f-4aa9-9678-bc6b50dc2313"),
                            GameId = new Guid("f3753036-2b1c-47e0-9fa2-df8d043ef5e4"),
                            PlayerId = new Guid("975a40e0-9331-4f27-9154-d3f09f28e403"),
                            PlayerScore = 121
                        },
                        new
                        {
                            Id = new Guid("62e36f09-4d6e-444e-b44e-766a55e86585"),
                            GameId = new Guid("776a75b7-1a9a-474d-bd41-8626ea2cc461"),
                            PlayerId = new Guid("08fc2f13-754c-46ae-adea-9188877593d2"),
                            PlayerScore = 121
                        },
                        new
                        {
                            Id = new Guid("c4e91afc-d4b5-4534-ad45-510e756708dc"),
                            GameId = new Guid("776a75b7-1a9a-474d-bd41-8626ea2cc461"),
                            PlayerId = new Guid("bb6a24a9-2aab-43e3-bc3d-3c0235a45ae6"),
                            PlayerScore = 85
                        },
                        new
                        {
                            Id = new Guid("1d1887e5-5d78-46db-abc5-22dd14000bc0"),
                            GameId = new Guid("c332ff9d-cd0f-4c33-8041-f27d8f80fd12"),
                            PlayerId = new Guid("bbec4de0-524c-440e-8598-3cda26b298bc"),
                            PlayerScore = 121
                        },
                        new
                        {
                            Id = new Guid("70b7534c-76f7-4af9-81c0-2867a9c0b8b1"),
                            GameId = new Guid("c332ff9d-cd0f-4c33-8041-f27d8f80fd12"),
                            PlayerId = new Guid("08fc2f13-754c-46ae-adea-9188877593d2"),
                            PlayerScore = 50
                        },
                        new
                        {
                            Id = new Guid("3b3a9d10-88bf-4fb3-9874-9196799c5771"),
                            GameId = new Guid("33db8313-0441-4e40-9096-dce7d7c097a2"),
                            PlayerId = new Guid("bbec4de0-524c-440e-8598-3cda26b298bc"),
                            PlayerScore = 121
                        },
                        new
                        {
                            Id = new Guid("7e53c97e-1ad9-4d4a-a2b8-9bb3df845c87"),
                            GameId = new Guid("33db8313-0441-4e40-9096-dce7d7c097a2"),
                            PlayerId = new Guid("05258f2e-a384-49a9-920a-14ff7db49cec"),
                            PlayerScore = 50
                        });
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblUserGame", b =>
                {
                    b.HasOne("Cribbage.PL.Entities.tblGame", "Game")
                        .WithMany("tblUserGames")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tblUserGame_GameId");

                    b.HasOne("Cribbage.PL.Entities.tblUser", "User")
                        .WithMany("tblUserGames")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tblUserGame_UserId");

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblGame", b =>
                {
                    b.Navigation("tblUserGames");
                });

            modelBuilder.Entity("Cribbage.PL.Entities.tblUser", b =>
                {
                    b.Navigation("tblUserGames");
                });
#pragma warning restore 612, 618
        }
    }
}
